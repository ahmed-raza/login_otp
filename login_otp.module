<?php

/**
 * @file
 * Contains login_otp.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\HtmlCommand;
use Drupal\Core\Ajax\ReplaceCommand;

use Drupal\login_otp\OTP;


/**
 * Implements hook_help().
 */
function login_otp_help($route_name, RouteMatchInterface $route_match) {
  // $otp = new OTP('admin');
  // $otp = $otp->generateOTP();
  switch ($route_name) {
    // Main module help for the login_otp module.
    case 'help.page.login_otp':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides login via Email OTP.') . '</p>';
      return $output;

    default:
  }
}

function login_otp_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'user_login_form') {
    unset($form['#submit'][0]);
    $form['actions']['submit']['#ajax'] = [
      'callback' => 'login_otp_login_ajax_callback'
    ];
  }
}

function login_otp_login_ajax_callback(&$form, FormStateInterface $form_state) {
  $response = new AjaxResponse();

  if ($form_state->getErrors()) {
    unset($form['#prefix']);
    unset($form['#suffix']);
    $form['status_messages'] = [
      '#type' => 'status_messages',
      '#weight' => -10,
    ];
    $form_state->setRebuild();
    $response->addCommand(new ReplaceCommand('.'.$form['#attributes']['class'][0], $form));
    return $response;
  }

  /**
   * Generate OTP against username.
   * Will save username and otp in tempstore.private
   * Send OTP in email.
   * Replace login form with OTP form.
   */

  return $response;
}
